{
  "permissions": {
    "allow": [
      "Bash(../.venv/Scripts/python.exe test_connection.py:*)",
      "Bash(../.venv/Scripts/python.exe -m alembic downgrade base)",
      "Bash(npx tsc:*)",
      "Bash(npm run lint)",
      "Bash(npx expo lint:*)",
      "Bash(npm install:*)",
      "Bash(npx:*)",
      "Bash(npm ls:*)",
      "Bash(docker-compose:*)",
      "Bash(test:*)",
      "Bash(\"C:\\Users\\Hassan\\Projects\\gpt5-mobile-assistant\\.venv\\Scripts\\python.exe\" -m uvicorn app.main:app --reload --host 0.0.0.0 --port 8000)",
      "Bash(curl:*)",
      "Bash(timeout 5 npx expo start --help)",
      "Bash(tasklist)",
      "Bash(findstr:*)",
      "Bash(netstat:*)",
      "Bash(taskkill:*)",
      "Bash(Stop-Process -Id 20352 -Force)",
      "Bash(cmd /c taskkill:*)",
      "Bash(../.venv/Scripts/python.exe -m uvicorn app.main:app --reload --host 0.0.0.0 --port 8000)",
      "Bash(C:/Users/Hassan/Projects/gpt5-mobile-assistant/.venv/Scripts/python.exe -m uvicorn app.main:app --reload --host 0.0.0.0 --port 8000)",
      "Bash(python:*)",
      "Bash(../.venv/Scripts/python.exe -c \"\nfrom sqlalchemy import create_engine, text\nfrom app.core.config import settings\n\nengine = create_engine(settings.DATABASE_URL)\nwith engine.connect() as conn:\n    result = conn.execute(text(''SELECT username, email, created_at FROM users ORDER BY created_at DESC LIMIT 5''))\n    users = result.fetchall()\n    if users:\n        print(f''Found {len(users)} user(s):'')\n        for user in users:\n            print(f''  - {user[0]} ({user[1]}) - created: {user[2]}'')\n    else:\n        print(''No users found in database'')\n\")"
    ],
    "deny": [],
    "ask": []
  },
  "enableAllProjectMcpServers": true,
  "enabledMcpjsonServers": [
    "firecrawl-mcp"
  ]
}